{"ast":null,"code":"import _objectSpread from \"/Users/justinmilner/mosh-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/justinmilner/mosh-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport PathfindingVisualizer from \"./components/PathfindingVisualizer\";\nimport \"./App.css\";\nimport { dijkstra } from \"./algorithms/dijkstra\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }],\n      algoSpeed: 10,\n      shortestPathSpeed: 20,\n      algorithm: \"Dijkstra\",\n      piece: \"Rook\"\n    };\n\n    this.selectAlgorithm = algo => {\n      this.state.algorithm = algo;\n      this.setState({\n        algo\n      });\n      console.log(this.state.algorithm);\n    };\n\n    this.selectPiece = p => {\n      this.state.piece = p;\n      this.setState({\n        p\n      });\n      console.log(this.state.piece);\n    };\n\n    this.handleIncrement = counter => {\n      //updating counters\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      if (counters[index].value == 5) return;\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      console.log(this.state.counters[0]);\n      this.setState({\n        counters\n      }); //updating speed\n\n      if (counter.id == 2) {\n        this.state.algoSpeed -= 1;\n        this.state.shortestPathSpeed -= 2;\n      } //or updating density\n\n    };\n\n    this.handleDecrement = counter => {\n      //updating counters\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value--;\n      console.log(this.state.counters[0]);\n      this.setState({\n        counters\n      }); //updating speed\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n\n    this.getSpeed = () => {\n      return this.state.counters[0].value;\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      onAlgorithm: this.selectAlgorithm,\n      totalCounters: this.state.counters.filter(c => c.value > 0).length,\n      onPiece: this.selectPiece,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Counters, {\n      counters: this.state.counters,\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      onDecrement: this.handleDecrement,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(PathfindingVisualizer, {\n      onAlgoSpeed: this.state.algoSpeed,\n      onShortestPathSpeed: this.state.shortestPathSpeed,\n      onAlgo: this.state.algorithm,\n      onPiece2: this.state.piece,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinmilner/mosh-app/src/App.js"],"names":["React","Component","NavBar","Counters","PathfindingVisualizer","dijkstra","App","state","counters","id","value","algoSpeed","shortestPathSpeed","algorithm","piece","selectAlgorithm","algo","setState","console","log","selectPiece","p","handleIncrement","counter","index","indexOf","handleDecrement","handleReset","map","c","handleDelete","counterId","filter","getSpeed","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport PathfindingVisualizer from \"./components/PathfindingVisualizer\";\nimport \"./App.css\";\nimport { dijkstra } from \"./algorithms/dijkstra\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 }\n    ],\n    algoSpeed: 10,\n    shortestPathSpeed: 20,\n    algorithm: \"Dijkstra\",\n    piece: \"Rook\"\n  };\n\n  selectAlgorithm = algo => {\n    this.state.algorithm = algo;\n    this.setState({ algo });\n    console.log(this.state.algorithm);\n  };\n\n  selectPiece = p => {\n    this.state.piece = p;\n    this.setState({ p });\n    console.log(this.state.piece);\n  };\n\n  handleIncrement = counter => {\n    //updating counters\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    if (counters[index].value == 5) return;\n    counters[index] = { ...counter };\n    counters[index].value++;\n    console.log(this.state.counters[0]);\n    this.setState({ counters });\n\n    //updating speed\n    if (counter.id == 2) {\n      this.state.algoSpeed -= 1;\n      this.state.shortestPathSpeed -= 2;\n    }\n    //or updating density\n  };\n\n  handleDecrement = counter => {\n    //updating counters\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value--;\n    console.log(this.state.counters[0]);\n    this.setState({ counters });\n\n    //updating speed\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = counterId => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  getSpeed = () => {\n    return this.state.counters[0].value;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          onAlgorithm={this.selectAlgorithm}\n          totalCounters={this.state.counters.filter(c => c.value > 0).length}\n          onPiece={this.selectPiece}\n        />\n        <div id=\"body\">\n          <main className=\"container\">\n            <Counters\n              counters={this.state.counters}\n              onReset={this.handleReset}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n            />\n          </main>\n          <PathfindingVisualizer\n            onAlgoSpeed={this.state.algoSpeed}\n            onShortestPathSpeed={this.state.shortestPathSpeed}\n            onAlgo={this.state.algorithm}\n            onPiece2={this.state.piece}\n          ></PathfindingVisualizer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}