{"ast":null,"code":"import _objectSpread from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import NavBar from\"./components/navbar\";import Counters from\"./components/counters\";import PathfindingVisualizer from\"./components/PathfindingVisualizer\";import\"./App.css\";import{dijkstra}from\"./algorithms/dijkstra\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={counters:[{id:1,value:0},{id:2,value:0}],algoSpeed:10,shortestPathSpeed:20,algorithm:\"Dijkstra\",piece:\"Rook\"};_this.selectAlgorithm=function(algo){_this.state.algorithm=algo;_this.setState({algo:algo});console.log(_this.state.algorithm);};_this.selectPiece=function(p){_this.state.piece=p;_this.setState({p:p});console.log(_this.state.piece);};_this.handleIncrement=function(counter){//updating counters\nvar counters=_toConsumableArray(_this.state.counters);var index=counters.indexOf(counter);if(counters[index].value==5)return;counters[index]=_objectSpread({},counter);counters[index].value++;console.log(_this.state.counters[0]);_this.setState({counters:counters});//updating speed\nif(counter.id==2){_this.state.algoSpeed-=1;_this.state.shortestPathSpeed-=2;}//or updating density\n};_this.handleDecrement=function(counter){//updating counters\nvar counters=_toConsumableArray(_this.state.counters);var index=counters.indexOf(counter);if(counters[index].value==0)return;counters[index]=_objectSpread({},counter);counters[index].value--;console.log(_this.state.counters[0]);_this.setState({counters:counters});//updating speed\n};_this.handleReset=function(){var counters=_this.state.counters.map(function(c){c.value=0;return c;});_this.setState({counters:counters});};_this.handleDelete=function(counterId){var counters=_this.state.counters.filter(function(c){return c.id!==counterId;});_this.setState({counters:counters});};_this.getSpeed=function(){return _this.state.counters[0].value;};return _this;}_createClass(App,[{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(NavBar,{onAlgorithm:this.selectAlgorithm,totalCounters:this.state.counters.filter(function(c){return c.value>0;}).length,onPiece:this.selectPiece}),React.createElement(\"div\",{id:\"body\"},React.createElement(\"main\",{className:\"container\"},React.createElement(Counters,{counters:this.state.counters,onReset:this.handleReset,onIncrement:this.handleIncrement,onDecrement:this.handleDecrement,onDelete:this.handleDelete})),React.createElement(PathfindingVisualizer,{onAlgoSpeed:this.state.algoSpeed,onShortestPathSpeed:this.state.shortestPathSpeed,onAlgo:this.state.algorithm,onPiece2:this.state.piece})));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/justinmilner/Documents/GitHub/Pathfinding/pathfindingapp/src/App.js"],"names":["React","Component","NavBar","Counters","PathfindingVisualizer","dijkstra","App","state","counters","id","value","algoSpeed","shortestPathSpeed","algorithm","piece","selectAlgorithm","algo","setState","console","log","selectPiece","p","handleIncrement","counter","index","indexOf","handleDecrement","handleReset","map","c","handleDelete","counterId","filter","getSpeed","length"],"mappings":"mhCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,oCAAlC,CACA,MAAO,WAAP,CACA,OAASC,QAAT,KAAyB,uBAAzB,C,GAEMC,CAAAA,G,mXACJC,K,CAAQ,CACNC,QAAQ,CAAE,CACR,CAAEC,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,CAAhB,CADQ,CAER,CAAED,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,CAAhB,CAFQ,CADJ,CAKNC,SAAS,CAAE,EALL,CAMNC,iBAAiB,CAAE,EANb,CAONC,SAAS,CAAE,UAPL,CAQNC,KAAK,CAAE,MARD,C,OAWRC,e,CAAkB,SAAAC,IAAI,CAAI,CACxB,MAAKT,KAAL,CAAWM,SAAX,CAAuBG,IAAvB,CACA,MAAKC,QAAL,CAAc,CAAED,IAAI,CAAJA,IAAF,CAAd,EACAE,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWM,SAAvB,EACD,C,OAEDO,W,CAAc,SAAAC,CAAC,CAAI,CACjB,MAAKd,KAAL,CAAWO,KAAX,CAAmBO,CAAnB,CACA,MAAKJ,QAAL,CAAc,CAAEI,CAAC,CAADA,CAAF,CAAd,EACAH,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWO,KAAvB,EACD,C,OAEDQ,e,CAAkB,SAAAC,OAAO,CAAI,CAC3B;AACA,GAAMf,CAAAA,QAAQ,oBAAO,MAAKD,KAAL,CAAWC,QAAlB,CAAd,CACA,GAAMgB,CAAAA,KAAK,CAAGhB,QAAQ,CAACiB,OAAT,CAAiBF,OAAjB,CAAd,CACA,GAAIf,QAAQ,CAACgB,KAAD,CAAR,CAAgBd,KAAhB,EAAyB,CAA7B,CAAgC,OAChCF,QAAQ,CAACgB,KAAD,CAAR,kBAAuBD,OAAvB,EACAf,QAAQ,CAACgB,KAAD,CAAR,CAAgBd,KAAhB,GACAQ,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAZ,EACA,MAAKS,QAAL,CAAc,CAAET,QAAQ,CAARA,QAAF,CAAd,EAEA;AACA,GAAIe,OAAO,CAACd,EAAR,EAAc,CAAlB,CAAqB,CACnB,MAAKF,KAAL,CAAWI,SAAX,EAAwB,CAAxB,CACA,MAAKJ,KAAL,CAAWK,iBAAX,EAAgC,CAAhC,CACD,CACD;AACD,C,OAEDc,e,CAAkB,SAAAH,OAAO,CAAI,CAC3B;AACA,GAAMf,CAAAA,QAAQ,oBAAO,MAAKD,KAAL,CAAWC,QAAlB,CAAd,CACA,GAAMgB,CAAAA,KAAK,CAAGhB,QAAQ,CAACiB,OAAT,CAAiBF,OAAjB,CAAd,CACA,GAAIf,QAAQ,CAACgB,KAAD,CAAR,CAAgBd,KAAhB,EAAyB,CAA7B,CAAgC,OAChCF,QAAQ,CAACgB,KAAD,CAAR,kBAAuBD,OAAvB,EACAf,QAAQ,CAACgB,KAAD,CAAR,CAAgBd,KAAhB,GACAQ,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAZ,EACA,MAAKS,QAAL,CAAc,CAAET,QAAQ,CAARA,QAAF,CAAd,EAEA;AACD,C,OAEDmB,W,CAAc,UAAM,CAClB,GAAMnB,CAAAA,QAAQ,CAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBoB,GAApB,CAAwB,SAAAC,CAAC,CAAI,CAC5CA,CAAC,CAACnB,KAAF,CAAU,CAAV,CACA,MAAOmB,CAAAA,CAAP,CACD,CAHgB,CAAjB,CAIA,MAAKZ,QAAL,CAAc,CAAET,QAAQ,CAARA,QAAF,CAAd,EACD,C,OAEDsB,Y,CAAe,SAAAC,SAAS,CAAI,CAC1B,GAAMvB,CAAAA,QAAQ,CAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBwB,MAApB,CAA2B,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACpB,EAAF,GAASsB,SAAb,EAA5B,CAAjB,CACA,MAAKd,QAAL,CAAc,CAAET,QAAQ,CAARA,QAAF,CAAd,EACD,C,OAEDyB,Q,CAAW,UAAM,CACf,MAAO,OAAK1B,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuBE,KAA9B,CACD,C,sEAEQ,CACP,MACE,qBAAC,KAAD,CAAO,QAAP,MACE,oBAAC,MAAD,EACE,WAAW,CAAE,KAAKK,eADpB,CAEE,aAAa,CAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBwB,MAApB,CAA2B,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACnB,KAAF,CAAU,CAAd,EAA5B,EAA6CwB,MAF9D,CAGE,OAAO,CAAE,KAAKd,WAHhB,EADF,CAME,2BAAK,EAAE,CAAC,MAAR,EACE,4BAAM,SAAS,CAAC,WAAhB,EACE,oBAAC,QAAD,EACE,QAAQ,CAAE,KAAKb,KAAL,CAAWC,QADvB,CAEE,OAAO,CAAE,KAAKmB,WAFhB,CAGE,WAAW,CAAE,KAAKL,eAHpB,CAIE,WAAW,CAAE,KAAKI,eAJpB,CAKE,QAAQ,CAAE,KAAKI,YALjB,EADF,CADF,CAUE,oBAAC,qBAAD,EACE,WAAW,CAAE,KAAKvB,KAAL,CAAWI,SAD1B,CAEE,mBAAmB,CAAE,KAAKJ,KAAL,CAAWK,iBAFlC,CAGE,MAAM,CAAE,KAAKL,KAAL,CAAWM,SAHrB,CAIE,QAAQ,CAAE,KAAKN,KAAL,CAAWO,KAJvB,EAVF,CANF,CADF,CA0BD,C,iBAnGeb,S,EAsGlB,cAAeK,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport PathfindingVisualizer from \"./components/PathfindingVisualizer\";\nimport \"./App.css\";\nimport { dijkstra } from \"./algorithms/dijkstra\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 }\n    ],\n    algoSpeed: 10,\n    shortestPathSpeed: 20,\n    algorithm: \"Dijkstra\",\n    piece: \"Rook\"\n  };\n\n  selectAlgorithm = algo => {\n    this.state.algorithm = algo;\n    this.setState({ algo });\n    console.log(this.state.algorithm);\n  };\n\n  selectPiece = p => {\n    this.state.piece = p;\n    this.setState({ p });\n    console.log(this.state.piece);\n  };\n\n  handleIncrement = counter => {\n    //updating counters\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    if (counters[index].value == 5) return;\n    counters[index] = { ...counter };\n    counters[index].value++;\n    console.log(this.state.counters[0]);\n    this.setState({ counters });\n\n    //updating speed\n    if (counter.id == 2) {\n      this.state.algoSpeed -= 1;\n      this.state.shortestPathSpeed -= 2;\n    }\n    //or updating density\n  };\n\n  handleDecrement = counter => {\n    //updating counters\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    if (counters[index].value == 0) return;\n    counters[index] = { ...counter };\n    counters[index].value--;\n    console.log(this.state.counters[0]);\n    this.setState({ counters });\n\n    //updating speed\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = counterId => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  getSpeed = () => {\n    return this.state.counters[0].value;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          onAlgorithm={this.selectAlgorithm}\n          totalCounters={this.state.counters.filter(c => c.value > 0).length}\n          onPiece={this.selectPiece}\n        />\n        <div id=\"body\">\n          <main className=\"container\">\n            <Counters\n              counters={this.state.counters}\n              onReset={this.handleReset}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n            />\n          </main>\n          <PathfindingVisualizer\n            onAlgoSpeed={this.state.algoSpeed}\n            onShortestPathSpeed={this.state.shortestPathSpeed}\n            onAlgo={this.state.algorithm}\n            onPiece2={this.state.piece}\n          ></PathfindingVisualizer>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}